//循环链表实现约瑟夫环
#include <iostream>
#include <stdio.h>
#include <malloc.h>
#define OK 1
#define ERROR 0
using namespace std;

typedef struct LNode
{
	int data;
    int num;
	struct LNode *next;
}LNode,*LinkList;

LinkList head,p,q;

int InitList(LinkList &L,int i)
{

    int len = 0;
    head = (LinkList)malloc(sizeof(LNode));
    p = head;
    for(i = 1;i < 7;i++)
	{
        cout << "Please input the " << i << "th people's key: ";
        cin >> p -> data;
        p -> num = i;		
		p -> next = (LinkList)malloc(sizeof(LNode));
		p = p -> next;
        len++;
	}
    cout << "Please input the " << i << "th people's key: ";
    cin >> p -> data;
    p -> num = i;
    p -> next = head;
    return 0;
}

int ListDelete(LinkList &L,int i,int &e)
{
    int j = 1;
    while(j < i)
    {
        p = p -> next;
//        cout << p -> data << " ";
        j++;
    }
    if(!p -> next || j > i)
        return 0;
    q = p -> next;
    p -> next = q -> next;
    cout << "(" <<q -> num << ")";    
    e = q -> data;//e是下一次的报数次数
    free(q);

    return 0;
}

int Display(LinkList &L)
{ 
    int j = 0;
    p = head;
    //测试循环链表是否成功建立
    cout << "test:";
    for(int i = 1;i <= 20;i++)
    {    
	 	cout << p -> data << " ";
	 	p = p -> next;
        j++;
    }
    if(j)
        cout << endl <<"init succesfully!" << endl;
    else
        cout << endl <<"init error!" << endl;
    return OK;
}

int main()
{
    int m = 20;
    int i = 0;
    LinkList L;
    InitList(L,i);
    Display(L);
    cout << "------------------------------------" << endl;
    for(int j = 1;j <= 7;j++)
    {
        ListDelete(L,m,m);//第一个m是循环次数，第二个m是要修改的
    }

    system("pause");
    return 0;
}

